# YAML配置管理器 - Docker Compose配置文件
# 用于一体化部署Go后端应用、MongoDB数据库和前端界面

services:
  # MongoDB数据库服务
  mongodb:
    image: mongo:7.0
    container_name: yaml-config-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: vnf_config
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - yaml-config-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go应用服务
  app:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: yaml-config-app
    restart: unless-stopped
    environment:
      - APP_PORT=8080
      - MONGO_URI=mongodb://admin:password123@mongodb:27017
      - MONGO_DATABASE=vnf_config
      - GIN_MODE=release
    ports:
      - "8080:8080"
    volumes:
      - ./sample_config.yaml:/app/config.yaml:ro
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - yaml-config-network
    # 简化健康检查
    # healthcheck: 暂时禁用，减少复杂度

volumes:
  mongodb_data:
    driver: local

networks:
  yaml-config-network:
    driver: bridge